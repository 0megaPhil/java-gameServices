extend type Query {
    createTransaction(input: TransactionInput): Transaction
    updateTransaction(input: TransactionInput): Transaction
    findTransaction(options: Options): [Transaction]
    getTransaction(id: String): Transaction
    flavorTransaction(id: String): Transaction
    deleteTransaction(id: String): Boolean

    createCurrency(input: CurrencyInput): Currency
    updateCurrency(input: CurrencyInput): Currency
    findCurrency(options: Options): [Currency]
    getCurrency(id: String): Currency
    flavorCurrency(id: String): Currency
    deleteCurrency(id: String): Boolean
}

input TransactionInput {
    id: String
    inventoryId: String
    currency: String!
    item: String
    flavor: FlavorInput
    prompt: String
}

type Transaction implements CommonEntity {
    id: String!
    inventoryId: String!
    currency: String
    item: String
    prompt: String
    flavor: Flavor
    created: DateTime
    updated: DateTime
    version: Int
    error: Error
}

input CurrencyInput {
    id: String
    name: String!
    flavor: FlavorInput
    prompt: String
}

type Currency implements CommonEntity {
    id: String!
    name: String!
    prompt: String
    flavor: Flavor
    created: DateTime
    updated: DateTime
    version: Int
    error: Error
}
