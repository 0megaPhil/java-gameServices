openapi: 3.0.1
info:
  title: InventoryService
  description: Documentation APIs v0.1.0
  version: 0.1.0
servers:
- url: http://54.153.32.101:8080
  description: Generated server url
paths:
  /items:
    get:
      tags:
      - item-controller
      operationId: find
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    put:
      tags:
      - item-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    post:
      tags:
      - item-controller
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    delete:
      tags:
      - item-controller
      operationId: delete
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
  /item/{uuid}:
    get:
      tags:
      - item-controller
      operationId: findByUuidPath
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Item'
    put:
      tags:
      - item-controller
      operationId: updateByUuid
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Item'
    delete:
      tags:
      - item-controller
      operationId: deleteByUuid
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /item:
    get:
      tags:
      - item-controller
      operationId: findByUuidParam
      parameters:
      - name: uuid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Item'
    put:
      tags:
      - item-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Item'
    post:
      tags:
      - item-controller
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Item'
    delete:
      tags:
      - item-controller
      operationId: delete_1
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
  /inventory/{uuid}/item:
    get:
      tags:
      - inventory-controller
      operationId: getOwnedItemsByInventoryUuid
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: requestBody
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Inventory'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OwnedItem'
    put:
      tags:
      - inventory-controller
      operationId: addOwnedItem
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: consumeOwnedItem
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
  /inventory/{uuid}/items:
    put:
      tags:
      - inventory-controller
      operationId: addOwnedItems
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: consumeOwnedItems
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
  /inventory/{uuid}/currency:
    put:
      tags:
      - inventory-controller
      operationId: creditCurrencyByUuid
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: debitCurrencyByUuid
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
  /inventory/{uuid}:
    get:
      tags:
      - inventory-controller
      operationId: findByUuidPath_1
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    put:
      tags:
      - inventory-controller
      operationId: updateByUuid_1
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: deleteByUuid_1
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /inventory:
    get:
      tags:
      - inventory-controller
      operationId: findByUuidParam_1
      parameters:
      - name: uuid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    put:
      tags:
      - inventory-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    post:
      tags:
      - inventory-controller
      operationId: add_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: delete_2
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        "200":
          description: OK
  /inventories:
    get:
      tags:
      - inventory-controller
      operationId: find_1
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
    put:
      tags:
      - inventory-controller
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Inventory'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
    post:
      tags:
      - inventory-controller
      operationId: add_3
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Inventory'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
    delete:
      tags:
      - inventory-controller
      operationId: delete_3
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Inventory'
      responses:
        "200":
          description: OK
  /currency/{uuid}:
    get:
      tags:
      - currency-controller
      operationId: findByUuidPath_2
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
    put:
      tags:
      - currency-controller
      operationId: updateByUuid_2
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
    delete:
      tags:
      - currency-controller
      operationId: deleteByUuid_2
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /currency:
    get:
      tags:
      - currency-controller
      operationId: findByUuidParam_2
      parameters:
      - name: uuid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
    put:
      tags:
      - currency-controller
      operationId: update_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
    post:
      tags:
      - currency-controller
      operationId: add_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Currency'
    delete:
      tags:
      - currency-controller
      operationId: delete_4
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
  /currencies:
    get:
      tags:
      - currency-controller
      operationId: find_2
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
    put:
      tags:
      - currency-controller
      operationId: update_5
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Currency'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
    post:
      tags:
      - currency-controller
      operationId: add_5
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
    delete:
      tags:
      - currency-controller
      operationId: delete_5
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      responses:
        "200":
          description: OK
  /inventory/item:
    get:
      tags:
      - inventory-controller
      operationId: findInventoriesWithItemByUuidParam
      parameters:
      - name: uuid
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
  /inventory/item/{uuid}:
    get:
      tags:
      - inventory-controller
      operationId: findInventoriesWithItemByUuidPath
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
components:
  schemas:
    Item:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        weight:
          type: number
          format: double
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        requirements:
          type: string
        baseValue:
          type: integer
          format: int32
    Inventory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        ownedItems:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OwnedItem'
        ownedCurrency:
          $ref: '#/components/schemas/OwnedCurrency'
    OwnedCurrency:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        currencyOwnedMap:
          type: object
          additionalProperties:
            type: integer
            format: int32
    OwnedItem:
      type: object
      properties:
        itemUuid:
          type: string
          format: uuid
        count:
          type: integer
          format: int32
        uuids:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    Currency:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        baseValue:
          type: integer
          format: int32
