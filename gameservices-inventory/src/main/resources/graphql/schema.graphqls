type InventoryQuery {
    create(input: InventoryInput): Inventory
    update(input: InventoryInput): Inventory
    find(options: Options): [Inventory]
    get(uuid: UUID): Inventory
    flavor(uuid: UUID): Inventory
}

type ItemQuery {
    create(input: ItemInput): Item
    update(input: ItemInput): Item
    find(options: Options): [Item]
    get(uuid: UUID): Item
    flavor(uuid: UUID): Item
}

input InventoryInput {
    uuid: UUID
    characterId: ID
    items: [InventoryItemInput]
    currencies: [InventoryCurrencyInput]
    flavor: FlavorInput
}

type Inventory implements Entity {
    uuid: UUID!
    characterId: UUID!
    items: [InventoryItem]
    currencies: [InventoryCurrency]
    flavor: Flavor
}

input InventoryItemInput {
    itemId: UUID!
    name: String
    inventoryId: UUID!
    quantity: Int!
}

input InventoryCurrencyInput {
    uuid: UUID
    name: String
    currencyId: UUID!
    inventoryId: UUID!
    quantity: Int!
}

input ItemInput {
    uuid: UUID
    name: String!
    flavor: FlavorInput
}

type InventoryItem implements Object {
    itemId: UUID!
    name: String
    inventoryId: UUID!
    quantity: Int!
}

type InventoryCurrency implements Object {
    currencyId: UUID!
    name: String
    inventoryId: UUID!
    quantity: Int!
}

type Item implements Entity {
    uuid: UUID!
    name: String!
    flavor: Flavor
}
