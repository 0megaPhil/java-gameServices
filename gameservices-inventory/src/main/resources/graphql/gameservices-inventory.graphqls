extend type Query {
    findInventory(options: Options): [Inventory]
    getInventory(id: String): Inventory

    findItem(options: Options): [Item]
    getItem(id: String): Item
}

extend type Mutation {
    createInventory(input: InventoryInput): Inventory
    updateInventory(input: InventoryInput): Inventory
    flavorInventory(id: String): Inventory
    deleteInventory(id: String): Boolean

    createItem(input: ItemInput): Item
    updateItem(input: ItemInput): Item
    flavorItem(id: String): Item
    deleteItem(id: String): Boolean
}

input InventoryInput {
    id: String
    type: Flavors = BACKPACK
    targetId: String
    items: [ItemEntryInput] = []
    currencies: [CurrencyEntryInput] = []
    features: [FeatureInput] = []
    entries: [AttributeEntryInput] = []
    summary: String
}

type Inventory implements CommonEntity {
    id: String
    type: Flavors
    targetId: String
    items: [ItemEntry]
    currencies: [CurrencyEntry]
    features: [Feature]
    entries: [AttributeEntry]
    summary: String
    created: DateTime
    updated: DateTime
    version: Int
    error: Error
}

type ItemEntry implements CommonValue {
    item: Item!
    value: Float
}

input ItemEntryInput {
    item: ItemInput!
    value: Float = 0
}

input CurrencyEntryInput {
    currency: CurrencyInput!
    value: Float = 0
}

type CurrencyEntry implements CommonValue {
    currency: Currency!
    value: Float!
}

input ItemInput {
    id: String
    name: String!
    type: Flavors
    professions: [ProfessionInput] = []
    summary: String
    rarity: Rarity
    values: [ItemEntryInput]
    salable: Boolean = true
    requiredEntries: [AttributeEntryInput] = []
    features: [FeatureInput] = []
    entries: [AttributeEntryInput] = []
}

type Item implements CommonEntity {
    id: String
    name: String!
    type: Flavors
    professions: [Profession]
    summary: String
    rarity: Rarity
    values: [ItemEntry]
    salable: Boolean
    requiredEntries: [AttributeEntry]
    entries: [AttributeEntry]
    features: [Feature]
    created: DateTime
    updated: DateTime
    version: Int
    error: Error
}
