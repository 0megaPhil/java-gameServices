type Query {
    allCharacters(limit: Int): [Character]
    createCharacter(input: CharacterInput): Character
    updateCharacter(input: CharacterInput): Character
    createInventory(input: InventoryInput): Inventory
    updateInventory(input: InventoryInput): Inventory
    createItem(input: ItemInput): Item
    updateItem(input: ItemInput): Item
    createCurrency(input: CurrencyInput): Currency
    updateCurrency(input: CurrencyInput): Currency
    createInventoryItem(input: InventoryItemInput): InventoryItem
    updateInventoryItem(input: InventoryItemInput): InventoryItem
    createInventoryCurrency(input: InventoryCurrencyInput): InventoryCurrency
    updateInventoryCurrency(input: InventoryCurrencyInput): InventoryCurrency
    characterById(uuid: ID): Character
    charactersByName(name: String): [Character]
    inventoryById(uuid: ID): Inventory
    itemById(uuid: ID): Item
    inventoryItemById(uuid: ID): InventoryItem
    inventoryCurrencyById(uuid: ID): InventoryCurrency
    currencyById(uuid: ID): Currency
    userById(uuid: ID): User
    worldById(uuid: ID): World
    detailedCharacter(uuid: ID): DetailedCharacter
}

input CharacterInput {
    uuid: ID
    name: String!
    description: String
    gender: String
    age: Int
    height: Int
    weight: Int
}

input InventoryInput {
    uuid: ID
    characterId: ID!
}

type Inventory {
    uuid: ID!
    characterId: ID!
    items: [ID!]
    currencies: [ID!]
}

input InventoryItemInput {
    uuid: ID
    itemId: ID!
    inventoryId: ID!
    quantity: Int!
}

input CurrencyInput {
    uuid: ID
    name: String!
    description: String!
    attributes: [String]
}

input InventoryCurrencyInput {
    uuid: ID
    currencyId: ID!
    inventoryId: ID!
    quantity: Int!
}

input ItemInput {
    uuid: ID
    name: String!
    description: String
    attributes: [String]
}

type InventoryItem {
    uuid: ID!
    itemId: ID!
    inventoryId: ID!
    quantity: Int!
}

type Currency {
    uuid: ID!
    name: String!
    description: String
    attributes: [String]
}

type InventoryCurrency {
    uuid: ID!
    currencyId: ID!
    inventoryId: ID!
    quantity: Int!
}

type Item {
    uuid: ID!
    name: String!
    description: String
    attributes: [String]
}

type Character {
    uuid: ID!
    name: String!
    description: String
    gender: String
    age: Int
    height: Int
    weight: Int
    userId: ID
    inventoryId: ID
}

type User {
    uuid: ID!
    firstName: String!
    lastName: String!
}

type World {
    uuid: ID!
}

type DetailedCharacter {
    uuid: ID!
    name: String!
    description: String
    gender: String
    age: Int
    height: Int
    weight: Int
    user: User
    inventory: DetailedInventory
}

type DetailedInventory {
    uuid: ID!
    items: [DetailedInventoryItem!]
    currencies: [DetailedInventoryCurrency!]
}

type DetailedInventoryItem {
    uuid: ID!
    item: Item!
    quantity: Int!
}

type DetailedInventoryCurrency {
    uuid: ID!
    currency: Currency!
    quantity: Int!
}